{
	"csm": {
		"nodes": {
			"25": {
				"typename": {
					"type": "string",
					"value": "QRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						324,
						223
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"342": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"343": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										40,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"344": {
								"textContent": {
									"type": "string",
									"value": "findCouple"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"345": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"346": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"347": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"348": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"349": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"350": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"351": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"352": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"359": {
								"textContent": {
									"type": "string",
									"value": "?"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										206,
										23
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": [
							{
								"src": "342",
								"dest": "350"
							},
							{
								"src": "350",
								"dest": "346"
							},
							{
								"src": "342",
								"dest": "351"
							},
							{
								"src": "351",
								"dest": "343"
							},
							{
								"src": "342",
								"dest": "352"
							},
							{
								"src": "352",
								"dest": "344"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/QRule/25.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/QRuleIcon"
			},
			"26": {
				"typename": {
					"type": "string",
					"value": "FRuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						318,
						366
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"366": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										1,
										26
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"367": {
								"textContent": {
									"type": "string",
									"value": "computeAvg"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"368": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										47,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"369": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"370": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"371": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"372": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										144,
										79
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"373": {
								"textContent": {
									"type": "string",
									"value": "F"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "100%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										205,
										22
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"374": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										95,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"375": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										37.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"376": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										15.25,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"377": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										23,
										39.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "366",
								"dest": "375"
							},
							{
								"src": "375",
								"dest": "367"
							},
							{
								"src": "366",
								"dest": "376"
							},
							{
								"src": "376",
								"dest": "371"
							},
							{
								"src": "366",
								"dest": "377"
							},
							{
								"src": "377",
								"dest": "369"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/FRule/26.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon"
			},
			"27": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						413,
						167
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/Start/27.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon"
			},
			"28": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "initialLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						426.0057692023214,
						210.14999926035506
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.991253335302588,3.8433122101200916%",
										"0;25.695692067808153,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.9905145099339165,3.8433122101200916%",
										"0;25.657258945706957,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.9905145099339165,3.8433122101200916%",
										"0;25.657258945706957,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.991253335302588,3.8433122101200916%",
										"0;25.695692067808153,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.988298033827846,3.8433122101200916%",
										"0;25.54195957940337,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.9905145099339165,3.8433122101200916%",
										"0;25.657258945706957,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.988298033827846,3.8433122101200916%",
										"0;25.54195957940337,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.9905145099339165,3.8433122101200916%",
										"0;25.657258945706957,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.986820383090446,3.8433122101200916%",
										"0;25.465093335200947,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.991253335302588,3.8433122101200916%",
										"0;25.695692067808153,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.9905145099339165,3.8433122101200916%",
										"0;25.657258945706957,99.92611746313143%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823439"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9905366708351835,0%",
										"0;-26.342164870861097,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9905366708351835,0%",
										"0;-26.342164870861097,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9905366708351835,0%",
										"0;-26.342164870861097,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.988320194729113,0%",
										"0;-26.457464237164714,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.991275496203855,0%",
										"0;-26.303731748759873,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9905366708351835,0%",
										"0;-26.342164870861097,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.9905366708351835,0%",
										"0;-26.342164870861097,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;6.988320194729113,0%",
										"0;-26.457464237164714,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.991275496203855,0%",
										"0;-26.303731748759873,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;2.991275496203855,0%",
										"0;-26.303731748759873,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.986842543991713,0%",
										"0;-26.534330481367135,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;87.79740183823408"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/initial/28.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon/27.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/28.instance": "M425,184L426.0057692023214,210.14999926035506",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/28.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/QRuleIcon/25.instance": "M426.0028735171949,210.0747114470686L426.99997783909873,235.99942381656803"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink"
			},
			"29": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						396.08414617460573,
						346.12438999724316
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.228782409784685,56.03093677042097%",
										"0;31.634069387760462,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.057065822912648,56.03093677042097%",
										"0;31.073760020056227,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.057065822912648,56.03093677042097%",
										"0;31.073760020056227,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.228782409784685,56.03093677042097%",
										"0;31.634069387760462,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;29.541916062296536,56.03093677042097%",
										"0;29.392831916943635,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.057065822912648,56.03093677042097%",
										"0;31.073760020056227,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;29.541916062296536,56.03093677042097%",
										"0;29.392831916943635,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.057065822912648,56.03093677042097%",
										"0;31.073760020056227,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;31.198482888552462,56.03093677042097%",
										"0;28.272213181535164,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;26.228782409784685,56.03093677042097%",
										"0;31.634069387760462,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;27.057065822912648,56.03093677042097%",
										"0;31.073760020056227,82.82834131279635%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.92280471986931"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.94272910896592,0%",
										"0;-36.92593683576422,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.94272910896592,0%",
										"0;-36.92593683576422,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.94272910896592,0%",
										"0;-36.92593683576422,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.457878869582032,0%",
										"0;-38.60686493887687,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.771012522093883,0%",
										"0;-36.365627468059984,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.94272910896592,0%",
										"0;-36.92593683576422,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-18.94272910896592,0%",
										"0;-36.92593683576422,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-16.457878869582032,0%",
										"0;-38.60686493887687,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.771012522093883,0%",
										"0;-36.365627468059984,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.771012522093883,0%",
										"0;-36.365627468059984,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-14.801312043326107,0%",
										"0;-39.72748367428528,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;55.922804719869184"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/29.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/QRuleIcon/25.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/29.instance": "M373,312L396.08414617460573,346.12438999724316",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/29.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/26.instance": "M396.04197053253716,346.0620433959245L418.99979493187857,379.99969685582045"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			},
			"30": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						459,
						490
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/30.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"31": {
				"typename": {
					"type": "string",
					"value": "EndSuccessIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						460,
						337
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"23": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#008000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"26": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#008000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none",
										"": ""
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"27": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.492540538484263,
										6.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "23",
								"dest": "27"
							},
							{
								"src": "27",
								"dest": "26"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess/31.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon"
			},
			"32": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						474.5,
						325
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498077540188092,-3.1234752377723685%",
										"0;16.124003462635926,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4975896162752065,-3.1234752377723685%",
										"0;16.15523821501364,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4975896162752065,-3.1234752377723685%",
										"0;16.15523821501364,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498077540188092,-3.1234752377723685%",
										"0;16.124003462635926,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.4961258445364365,-3.1234752377723685%",
										"0;16.24894247214678,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4975896162752065,-3.1234752377723685%",
										"0;16.15523821501364,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.4961258445364365,-3.1234752377723685%",
										"0;16.24894247214678,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4975896162752065,-3.1234752377723685%",
										"0;16.15523821501364,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.495149996710609,-3.1234752377723685%",
										"0;16.311411976902264,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.498077540188092,-3.1234752377723685%",
										"0;16.124003462635926,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4975896162752065,-3.1234752377723685%",
										"0;16.15523821501364,99.95120760870788%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824622"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.497560380435402,0%",
										"0;-15.843826238111376,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.497560380435402,0%",
										"0;-15.843826238111376,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.497560380435402,0%",
										"0;-15.843826238111376,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.496096608696632,0%",
										"0;-15.750121980978236,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498048304348288,0%",
										"0;-15.87506099048909,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.497560380435402,0%",
										"0;-15.843826238111376,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.497560380435402,0%",
										"0;-15.843826238111376,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.496096608696632,0%",
										"0;-15.750121980978236,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498048304348288,0%",
										"0;-15.87506099048909,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498048304348288,0%",
										"0;-15.87506099048909,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.495120760870805,0%",
										"0;-15.687652476222809,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;91.78991060824606"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/32.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/QRuleIcon/25.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/32.instance": "M475,309L474.5,325",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/32.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndSuccessIcon/31.instance": "M474.4976709059247,325.07453101040846L474.0000292358398,340.999064453125"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"33": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						468.5,
						473
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498731866882508,2.49921911602044%",
										"0;19.89928248535915,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498419513290628,2.49921911602044%",
										"0;19.874290294198943,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498419513290628,2.49921911602044%",
										"0;19.874290294198943,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498731866882508,2.49921911602044%",
										"0;19.89928248535915,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.497482452514987,2.49921911602044%",
										"0;19.799313720718374,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498419513290628,2.49921911602044%",
										"0;19.874290294198943,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;8.497482452514987,2.49921911602044%",
										"0;19.799313720718374,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498419513290628,2.49921911602044%",
										"0;19.874290294198943,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.496857745331283,2.49921911602044%",
										"0;19.749329338397956,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.498731866882508,2.49921911602044%",
										"0;19.89928248535915,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;5.498419513290628,2.49921911602044%",
										"0;19.874290294198943,99.96876464081227%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583528"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4984382320405985,0%",
										"0;-20.124960955800987,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4984382320405985,0%",
										"0;-20.124960955800987,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4984382320405985,0%",
										"0;-20.124960955800987,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.4975011712649575,0%",
										"0;-20.199937529281613,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4987505856324788,0%",
										"0;-20.099968764640835,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4984382320405985,0%",
										"0;-20.124960955800987,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.4984382320405985,0%",
										"0;-20.124960955800987,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.4975011712649575,0%",
										"0;-20.199937529281613,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4987505856324788,0%",
										"0;-20.099968764640835,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.4987505856324788,0%",
										"0;-20.099968764640835,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.496876464081254,0%",
										"0;-20.24992191160203,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.56790381583536"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/33.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/26.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/33.instance": "M468,453L468.5,473",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/33.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/30.instance": "M468.5018656211521,473.0746248460821L468.99998128125003,492.99925125"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"34": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						290,
						344.44039299051997
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.96902431098175,99.99717350442997%",
										"0;-107.44027315362104,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.9615057265077,99.99717350442997%",
										"0;-108.44024488866535,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.9615057265077,99.99717350442997%",
										"0;-108.44024488866535,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.96902431098175,99.99717350442997%",
										"0;-107.44027315362104,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.93894997308564,99.99717350442997%",
										"0;-111.44016009379823,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.9615057265077,99.99717350442997%",
										"0;-108.44024488866535,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.93894997308564,99.99717350442997%",
										"0;-111.44016009379823,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.9615057265077,99.99717350442997%",
										"0;-108.44024488866535,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.92391280413761,99.99717350442997%",
										"0;-113.44010356388685,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.96902431098175,99.99717350442997%",
										"0;-107.44027315362104,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;132.9615057265077,99.99717350442997%",
										"0;-108.44024488866535,-0.7518584474017167%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.43078721700862127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;85,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;87,0%",
										"0;109.55960700948003,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;90"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/34.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/FRuleIcon/26.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/34.instance": "M367,454L367,479L290,478L290,344.44039299051997",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/34.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/QRuleIcon/25.instance": "M290,344.44039299051997L290,242L422.9990986488778,241.00000677707612"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"25": {
				"query": {
					"type": "string",
					"value": "/Formalisms/TTC2014/IMDB/task3-computeCoupleAverageRanking/R_findCouple.model"
				},
				"name": {
					"type": "string",
					"value": "findCouple"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						324,
						223
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/QRule"
			},
			"26": {
				"maxIterations": {
					"type": "int",
					"value": 100000
				},
				"rule": {
					"type": "string",
					"value": "/Formalisms/TTC2014/IMDB/task3-computeCoupleAverageRanking/R_computeAverage.model"
				},
				"name": {
					"type": "string",
					"value": "computeAvg"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						318,
						366
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/FRule"
			},
			"27": {
				"position": {
					"type": "list<int>",
					"value": [
						413,
						167
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/Start"
			},
			"28": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/initial"
			},
			"29": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			},
			"30": {
				"position": {
					"type": "list<int>",
					"value": [
						459,
						490
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"31": {
				"position": {
					"type": "list<int>",
					"value": [
						460,
						337
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndSuccess"
			},
			"32": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"33": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"34": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			}
		},
		"edges": [
			{
				"src": "27",
				"dest": "28"
			},
			{
				"src": "28",
				"dest": "25"
			},
			{
				"src": "25",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "26"
			},
			{
				"src": "25",
				"dest": "32"
			},
			{
				"src": "32",
				"dest": "31"
			},
			{
				"src": "26",
				"dest": "33"
			},
			{
				"src": "33",
				"dest": "30"
			},
			{
				"src": "26",
				"dest": "34"
			},
			{
				"src": "34",
				"dest": "25"
			}
		],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif"
		]
	}
}